{"version":3,"file":"static/js/139.42b2721e.chunk.js","mappings":"gRAoDA,EA9CyB,WACvB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAAqCC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAsBC,EAAtB,KAAsBA,UAHO,wCAK7B,WAA4BC,GAA5B,gFACEA,EAAIC,iBACEC,EAAO,IAAIC,KACjBC,QAAQC,IAAI,iBAAkBH,EAAKI,kBAHrC,SAIyBR,EAAY,CACjCH,KAAAA,EACAY,UAAWL,EAAKI,mBANpB,QAIQE,EAJR,QAQeC,OACXC,EAAAA,GAAAA,MAAY,2BAEVF,EAASG,MACXD,EAAAA,GAAAA,QAAc,2BAGhBd,EAAQ,IAfV,4CAL6B,sBAuB7B,OACE,+BACE,kBAAMgB,UAAU,iBAAiBC,SAzBR,4CAyBzB,WACE,kBAAOD,UAAU,QAAQE,QAAQ,OAAjC,UACE,kBACEF,UAAU,YACVG,KAAK,OACLC,KAAK,OACLC,MAAOtB,EACPuB,SAAU,SAAAlB,GAAG,OAAIJ,EAAQI,EAAImB,OAAOF,MAAvB,EACbG,YAAY,uBAIhB,oBAAQR,UAAU,SAASI,KAAK,SAASK,SAAUtB,EAAnD,UACGA,IAAa,SAACuB,EAAA,EAAD,CAAaC,KAAM,EAAGC,MAAM,UAD5C,gBAOP,ECED,EA/C2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqB5B,EAArB,KAAqBA,UAEf6B,EAAkB,mCAAG,6FACrBb,EAAOU,EAAS9B,KADK,SAGFgC,EAAWF,EAASI,IAHlB,QAGnBrB,EAHmB,QAKZG,MACXD,EAAAA,GAAAA,QAAA,2BAAkCK,EAAlC,yBAEEP,EAASC,OACXC,EAAAA,GAAAA,MAAA,mDAC8CK,EAD9C,2BAIFA,EAAO,GAbkB,2CAAH,qDAgBxB,OACE,+BACE,gBAAIH,UAAU,gBAAd,WACE,iBAAKA,UAAU,oBAAf,WACE,0BACE,iBAAMA,UAAU,eAAhB,qBACA,kBAAMA,UAAU,UAAhB,cAA4Ba,EAAS9B,YAEvC,0BACE,iBAAMiB,UAAU,2BAAhB,wBACA,kBAAMA,UAAU,sBAAhB,cAAwCa,EAASlB,oBAIrD,oBACEK,UAAU,SACVI,KAAK,SACLK,SAAUtB,EACV+B,QAASF,EAJX,UAMG7B,IAAa,SAACuB,EAAA,EAAD,CAAaC,KAAM,EAAGC,MAAM,UAN5C,gBAYP,ECdD,EA/ByB,WACvB,OAA6CO,EAAAA,EAAAA,MAArCpB,EAAR,EAAQA,KAAMqB,EAAd,EAAcA,WAAYvB,EAA1B,EAA0BA,MAAOwB,EAAjC,EAAiCA,QACjC,OACE,gCACGD,IACC,gBAAKpB,UAAU,SAAf,UACE,SAACU,EAAA,EAAD,CACEC,KAAM,GACNW,OAAQ,EACRV,MAAO,YACP,aAAW,sBAIhBS,IACC,4BACE,wBAAKxB,EAAM0B,UACX,uBAAI1B,EAAMA,WAGbE,IACC,eAAIC,UAAU,WAAd,SACGD,EAAKyB,KAAI,SAAAzC,GAAI,OACZ,SAAC,EAAD,CAAkC8B,SAAU9B,GAAnBA,EAAKkC,GADlB,QAOvB,ECfD,EAb0B,WACxB,OACE,iBAAKjB,UAAU,YAAf,WACE,eAAIA,UAAU,UAAd,iCACA,4BACE,SAAC,KAAD,CAAgByB,UAAW,OAC3B,SAAC,EAAD,KACA,SAAC,EAAD,SAIP,C","sources":["components/notificationComponents/NotificationForm/NotificationForm.jsx","components/notificationComponents/NotificationMarkup/NotificationMarkup.jsx","components/notificationComponents/NotificationList/NotificationList.jsx","pages/NotificationsPage.jsx"],"sourcesContent":["import { useCreateNotificationMutation } from 'redux/features/notificationSlice/notificationSlice';\nimport { toast } from 'react-toastify';\nimport { PulseLoader } from 'react-spinners';\nimport './NotificationForm.scss';\nimport { useState } from 'react';\n\nconst NotificationForm = () => {\n  const [note, setNote] = useState('');\n\n  const [noteCreator, { isLoading }] = useCreateNotificationMutation();\n\n  async function onSubmitNote(evt) {\n    evt.preventDefault();\n    const time = new Date();\n    console.log('Current time: ', time.toLocaleString());\n    const response = await noteCreator({\n      note,\n      createdAt: time.toLocaleString(),\n    });\n    if (response.error) {\n      toast.error('Note failed to be added');\n    }\n    if (response.data) {\n      toast.success('Note added successfully');\n    }\n\n    setNote('');\n  }\n\n  return (\n    <>\n      <form className=\" noteForm form\" onSubmit={onSubmitNote}>\n        <label className=\"label\" htmlFor=\"note\">\n          <input\n            className=\"nameField\"\n            name=\"note\"\n            type=\"text\"\n            value={note}\n            onChange={evt => setNote(evt.target.value)}\n            placeholder=\"Enter your note\"\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\" disabled={isLoading}>\n          {isLoading && <PulseLoader size={5} color=\"white\" />}\n          Create\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default NotificationForm;\n","import { toast } from 'react-toastify';\nimport { PulseLoader } from 'react-spinners';\nimport { useDeleteNotificationMutation } from 'redux/features/notificationSlice/notificationSlice';\nimport './NotificationMarkup.scss';\n\nconst NotificationMarkup = ({ noteData }) => {\n  const [deleteNote, { isLoading }] = useDeleteNotificationMutation(); // tuple[function, option(info about mutation result )]\n\n  const deleteNotification = async () => {\n    let name = noteData.note;\n    // ----------------------------------------------------------------\n    const response = await deleteNote(noteData.id);\n    // ----------------------------------------------------------------\n    if (response.data) {\n      toast.success(`The notification ${name} successful deleted.`);\n    }\n    if (response.error) {\n      toast.error(\n        `Something went wrong... The notification ${name} could not be deleted.`\n      );\n    }\n    name = '';\n  };\n\n  return (\n    <>\n      <li className=\"noteList__row\">\n        <div className=\"container-content\">\n          <p>\n            <span className=\"titleContent\">Note: </span>\n            <span className=\"content\"> {noteData.note}</span>\n          </p>\n          <p>\n            <span className=\"titleContent dataContent\">Created: </span>\n            <span className=\"content dataContent\"> {noteData.createdAt}</span>\n          </p>\n        </div>\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n          disabled={isLoading}\n          onClick={deleteNotification}\n        >\n          {isLoading && <PulseLoader size={5} color=\"white\" />}\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport default NotificationMarkup;\n","import { useGetNotificationsQuery } from 'redux/features/notificationSlice/notificationSlice';\nimport NotificationMarkup from '../NotificationMarkup/NotificationMarkup';\nimport { PulseLoader } from 'react-spinners';\nimport './NotificationList.scss';\n\nconst NotificationList = () => {\n  const { data, isFetching, error, isError } = useGetNotificationsQuery();\n  return (\n    <>\n      {isFetching && (\n        <div className=\"loader\">\n          <PulseLoader\n            size={20}\n            margin={5}\n            color={'#3f68b5d1'}\n            aria-label=\"Loading Spinner\"\n          />\n        </div>\n      )}\n      {isError && (\n        <div>\n          <h2>{error.status}</h2>\n          <p>{error.error}</p>\n        </div>\n      )}\n      {data && (\n        <ul className=\"noteList\">\n          {data.map(note => (\n            <NotificationMarkup key={note.id} noteData={note} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default NotificationList;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport NotificationForm from 'components/notificationComponents/NotificationForm/NotificationForm';\nimport NotificationList from 'components/notificationComponents/NotificationList/NotificationList';\n\nconst NotificationsPage = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"headers\">Notifications Page</h1>\n      <div>\n        <ToastContainer autoClose={1000} />\n        <NotificationForm />\n        <NotificationList />\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationsPage;\n"],"names":["useState","note","setNote","useCreateNotificationMutation","noteCreator","isLoading","evt","preventDefault","time","Date","console","log","toLocaleString","createdAt","response","error","toast","data","className","onSubmit","htmlFor","name","type","value","onChange","target","placeholder","disabled","PulseLoader","size","color","noteData","useDeleteNotificationMutation","deleteNote","deleteNotification","id","onClick","useGetNotificationsQuery","isFetching","isError","margin","status","map","autoClose"],"sourceRoot":""}