{"version":3,"file":"static/js/551.aba27de5.chunk.js","mappings":"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","sources":["components/contactComponents/ContactMarkup/ContactMarkup.jsx","components/contactComponents/ContactList/ContactList.jsx","components/contactComponents/ContactForm/ContactForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useDeleteContactMutation } from 'redux/features/contactSlice/contactSlice';\nimport { PulseLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\n\nconst ContactMarkup = ({ id, name, phone }) => {\n  // ****************************************************************\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  // ****************************************************************\n  async function handleDeleteContact(id) {\n    // -------------------------------------------------\n    const response = await deleteContact(id);\n    // -------------------------------------------------\n    if (response.data) {\n      toast.success(`The notification ${name} successful deleted.`);\n    }\n    if (response.error) {\n      toast.error(\n        `Something went wrong... The notification ${name} could not be deleted.`\n      );\n    }\n  }\n  return (\n    <li className=\"contactsList__row\">\n      <div className=\"container-content\">\n        <p>\n          <span className=\"titleContent\">Name:</span>\n          <span className=\"content\"> {name}</span>\n        </p>\n        <p>\n          <span className=\"titleContent\">Phone:</span>\n          <span className=\"content\"> {phone}</span>\n        </p>\n      </div>\n\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleDeleteContact(id)}\n        disabled={isLoading}\n      >\n        {isLoading && <PulseLoader size={5} color=\"white\" />}\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactMarkup;\n","import { useGetAllContactsQuery } from 'redux/features/contactSlice/contactSlice';\nimport { PulseLoader } from 'react-spinners';\nimport ContactMarkup from '../ContactMarkup';\nimport './ContactList.scss';\n\nconst ContactList = () => {\n  // ****************************************************************\n  const {\n    data: contacts,\n    isFetching,\n    isError,\n    error,\n  } = useGetAllContactsQuery({\n    skip: false,\n    pollingInterval: 2000,\n    refetchOnMountOrArgChange: 2000,\n    refetchOnFocus: true,\n    refetchOnReconnect: true,\n  });\n  // ****************************************************************\n\n  return (\n    <>\n      {isFetching && (\n        <div className=\"loader\">\n          <PulseLoader\n            size={20}\n            margin={5}\n            color={'#3f68b5d1'}\n            aria-label=\"Loading Spinner\"\n          />\n        </div>\n      )}\n      {isError && (\n        <div>\n          <h3 className=\"headers\">\n            {error.status}. {error.error}\n          </h3>\n        </div>\n      )}\n      {contacts && (\n        <div className=\"contactsContainer\">\n          <h2 className=\"headers\">Contacts</h2>\n          <ul className=\"contactsList\">\n            {contacts.map(contact => (\n              <ContactMarkup key={contact.id} {...contact} />\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useCreateContactMutation } from 'redux/features/contactSlice/contactSlice';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { PulseLoader } from 'react-spinners';\nimport './ContactForm.scss';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const formSubmit = async evt => {\n    evt.preventDefault();\n\n    const response = await createContact({ name, phone });\n    if (response.data) {\n      toast.success(`${name} added to contacts.`);\n    }\n    if (response.error) {\n      toast.error(\n        `Something went wrong... Additing contact ${name} was rejected.`\n      );\n    }\n\n    setName('');\n    setPhone('');\n  };\n\n  // console.log('isLoading: ', isLoading); // true якщо мутація запущена та очікується відповідь\n  // console.log('isSuccess: ', isSuccess); // true якщо остання мутація(обробка) має дані із успішного запиту\n\n  return (\n    <form id=\"form\" className=\"contactForm form\" onSubmit={formSubmit}>\n      <label className=\"label\" htmlFor=\"name\">\n        Name\n        <br />\n        <input\n          id=\"name\"\n          className=\"nameField\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={evt => setName(evt.currentTarget.value)}\n          placeholder=\"Enter contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className=\"label\" htmlFor=\"phone\">\n        Number\n        <br />\n        <input\n          className=\"nameField\"\n          id=\"phone\"\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={evt => setPhone(evt.currentTarget.value)}\n          placeholder=\"Enter number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className=\"button\" type=\"submit\" disabled={isLoading}>\n        {isLoading && <PulseLoader size={5} color=\"white\" />}\n        <span>Add contact</span>\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactList from 'components/contactComponents/ContactList';\nimport ContactForm from 'components/contactComponents/ContactForm';\n\nconst ContactsPage = () => {\n  return (\n    <div className=\"container\">\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={1500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n      <h2 className=\"headers\">Phone Book</h2>\n      <ContactForm />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["id","name","phone","useDeleteContactMutation","deleteContact","isLoading","response","data","toast","error","className","type","onClick","handleDeleteContact","disabled","PulseLoader","size","color","useGetAllContactsQuery","skip","pollingInterval","refetchOnMountOrArgChange","refetchOnFocus","refetchOnReconnect","contacts","isFetching","isError","margin","status","map","contact","useState","setName","setPhone","useCreateContactMutation","createContact","formSubmit","evt","preventDefault","onSubmit","htmlFor","value","onChange","currentTarget","placeholder","pattern","title","required","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}